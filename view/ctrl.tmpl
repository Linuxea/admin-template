package controller 

import (
	"code.com/tars/goframework/kissgo/appzaplog"
	"code.com/tars/goframework/kissgo/appzaplog/zap"
	"github.com/jinzhu/gorm"
	"niubigit.caijiyouxi.com/yungame/server/src/common/conf/db"
	"niubigit.caijiyouxi.com/yungame/server/src/util/errors"
	"niubigit.caijiyouxi.com/yungame/server/src/yunGame/admin/model"
)


type {{.ControllerName}} struct {
	Name string
}

func (*{{.ControllerName}}) Add(param map[string]interface{}) *model.ResData {
	res := new(model.ResData)
	vo := new({{.ModelName}})
	if err := MapToStruct(param, vo); err != nil {
		appzaplog.Error("error", zap.Error(err))
		res.Code = errors.ErrorUnknow
		res.Msg = err.Error()
		return res
	}

	if err := db.DbRW.Save(vo).Error; err != nil {
		res.Code = errors.ErrorUnknow
		res.Msg = err.Error()
		return res
	}

	return res
}

// List 列表
func (*{{.ControllerName}}) List(param map[string]interface{}) *model.ResData {
	res := new(model.ResData)

	page := getIntValue(param, "page")
	pageSize := getIntValue(param, "page_size")
	
	list := make([]*{{.ModelName}}, 0)

	condition := &{{.ModelName}}{
             // 搜索参数
            {{ range .Record.Cols }}
                {{ if .Queryable }}
                    {{Sneak2Camcel .Prop}} : {{ if eq .Type 1}}getIntValue{{else}}getStringValue{{end}}(param, "{{.Prop}}"),
                {{end}}
            {{end}}

        }

	err := db.DbRW.Offset((page - 1) * pageSize).Limit(pageSize).Order("id desc").Where(condition).Find(&list).Error
	if err != nil {
		res.Code = errors.ErrorUnknow
		res.Msg = err.Error()
		return res
	}

	total := int32(0)
	if err := db.DbRW.Model(condition).Where(condition).Count(&total).Error; err != nil {
		res.Code = errors.ErrorUnknow
		res.Msg = err.Error()
		return res
	}

	res.Datas = list
	res.Total = total
	return res
}

func (*{{.ControllerName}}) Delete(param map[string]interface{}) *model.ResData {
	res := new(model.ResData)
	id := getIntValue(param, "id")
	err := db.DbRW.Delete(&{{.ModelName}}{
		Model: gorm.Model{ID: uint(id)},
	}).Error
	if err != nil {
		res.Code = errors.ErrorUnknow
		res.Msg = err.Error()
		return res
	}

	return res
}
